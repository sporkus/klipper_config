#######################################################################################################################################
# The goal of this macro is to provide a nozzle scrubbing and purging routine that is easily copied/referenced into your  printer.cfg.
# Users can simply change parameters and enable/disable options in the first half. Descriptions are plentiful, making this macro
# look huge but informative and are laid out in sequence to be read first describing the line below; PLEASE READ CAREFULLY.

# Once uploaded, add the following to your printer.cfg in the Macros section: [include /home/pi/nozzle_scrub.cfg] 
# Those running Fluidd, Mainsail and other front ends will need to use the following location instead:
# [include /home/pi/klipper_config/nozzle_scrub.cfg]

#######################################################################################################################################

# Name of the macro is clean_nozzle.

[gcode_macro clean_nozzle]
variable_location_bucket_rear:      False        ; Define y location
variable_enable_purge:              True

# Purge setting
variable_purge_x:            300	         
variable_purge_y:            294	  
variable_purge_z:              0.5	   
variable_purge_len:            25	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           300	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:           20              ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            0            ; Dwell/wait time, in seconds, after purging and retracting.

# Scrub height
variable_brush_top:            3

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe 
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z:           15	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_clearance_y:           270	         ; safe y position for travelling 
variable_wipe_qty:              5	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd:        60000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_wipe_spd:           60000	         ; Nozzle wipe speed in mm/min.

# 
#                  ←   brush_width   →                            
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
 
variable_brush_front:     298 
variable_brush_depth:     5 
variable_brush_start:     250 
# This value is defaulted from brush location in CAD (rear left). Change if your brush width is different.
variable_brush_width:          50	

# 
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |      
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
 
variable_bucket_start: 250
variable_bucket_left_width:    50 
variable_bucket_right_width:   0            
variable_bucket_gap:           0	

###############################################################################################################################################
###############################################################################################################################################

### From here on, unless you know what you're doing, it's recommended not to change anything. Feel free to peruse the code and reach out to me
### (edwardyeeks#6042) on Discord if you spot any problems!

###############################################################################################################################################
###############################################################################################################################################

# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos:            1	        

gcode:
    {% set brush_back = brush_front + brush_depth %}

    # First, check if the axes are homed.
    {% if "xyz" in printer.toolhead.homed_axes %}
    {% else %}
    G28
    {% endif %}

    ## Save the gcode state in this macro instance.
    SAVE_GCODE_STATE NAME=clean_nozzle
    STATUS_CLEANING
    
    ## Set to absolute positioning.
    G90
    G1 Y{clearance_y} F{prep_spd}
    G1 Z{brush_top + clearance_z} F{prep_spd}
    

    ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
    ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
    {% if enable_purge and (printer.extruder.temperature >= purge_temp_min) %}
	G1 X{purge_x} F{prep_spd}
        G1 Y{purge_y} F{prep_spd}
        G1 Z{purge_z} F{prep_spd}
       
        M83      ; relative mode
        G1 E{purge_len} F{purge_spd}
        G1 E-{purge_ret} F{purge_spd * 5}
        G4 P{ooze_dwell * 1000}
        G92 E0   ; reset extruder
    {% endif %}
    
    ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
    G1 X{brush_start}  F{prep_spd}
    G1 Y{brush_front} F{prep_spd}
    
    ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
    {% for wipes in range(1, (wipe_qty + 1)) %}
    	{% for pos_x in range(brush_start, brush_start + brush_width, 5) %}
	    {% set pos_y = brush_back if pos_x%2 else brush_front %}
            G1 X{pos_x} Y{pos_y} Z{brush_top} F{wipe_spd}
        {% endfor %}
    	{% for pos_x in range(brush_start + brush_width, brush_start, -5) %}
	    {% set pos_y = brush_back if pos_x%2 else brush_front %}
            G1 X{pos_x} Y{pos_y} Z{brush_top + 1} F{wipe_spd}
        {% endfor %}
    {% endfor %}
    
    ## Clear from area.
    M117 Cleaned!
    G1 Z{brush_top + clearance_z} F{prep_spd}
    G1 X{bucket_start} F{prep_spd} 
    
    ## Restore the gcode state to how it was before the macro.
    RESTORE_GCODE_STATE NAME=clean_nozzle
    STATUS_READY
    

[gcode_macro prime_nozzle]
description: prime nozzle after cleaning
gcode:
    {% set purge_x=printer['gcode_macro clean_nozzle'].purge_x %}
    {% set purge_y=printer['gcode_macro clean_nozzle'].purge_y %}
    {% set purge_z=printer['gcode_macro clean_nozzle'].purge_z %}
    {% set unretract=printer['gcode_macro clean_nozzle'].purge_ret %}

    G90
    M83
    G0 X{purge_x} Y{purge_y} Z{purge_z} F30000 
    G0 E{unretract} F300
