[gcode_macro clean_nozzle]
# Purge setting
variable_purge_x:            115,195	     ; x coordinate(s) for purge, separated by comma. One will be chosen at random.
variable_purge_y:            303	  
variable_purge_z:              0	   
variable_purge_len:            5	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           3 	         ; Speed, in mm/s, of the purge.
variable_retract_spd:         30 	         ; Speed, in mm/s, of the retraction.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:           10              ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_wait:           5              ; seconds to wait after retract 

# Scrub height
variable_brush_top:           1.5
variable_clearance_z:         15	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_clearance_y:         270	         ; safe y position for travelling 
variable_wipe_qty:            5	         ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_prep_spd:           650	         ; Travel (not cleaning) speed along x and y-axis in mm/s.
variable_wipe_spd:           650	         ; Nozzle wipe speed in mm/s.

# 
#                  ←   brush_width   →                            
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.       
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
 
variable_brush_front:     300
variable_brush_depth:     3 
variable_brush_start:     133
variable_brush_width:          50	

variable_bucket_start: 250
variable_bucket_width:    50 

###############################################################################################################################################

gcode:
    {% set brush_back = brush_front + brush_depth %}
    {% set purge = params.PURGE | default(1) %}
    {% set purge_x = purge_x | random() %}
    {% set prep_spd = prep_spd*60 %}
    {% set wipe_spd = wipe_spd*60 %}

    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    SAVE_GCODE_STATE NAME=clean_nozzle
    STATUS_CLEANING
    G90
    G1 Z{brush_top + clearance_z} F{prep_spd}
    G1 Y{clearance_y} F{prep_spd}

    {% if (printer.extruder.temperature >= purge_temp_min) and purge %}
        G1 X{purge_x} F{prep_spd}
        G1 Y{purge_y} F{prep_spd}
        G1 Z{purge_z} F{prep_spd}
       
        M83      ; relative mode
        G1 E{purge_len + purge_ret} F{purge_spd * 60}
        G1 E-{purge_ret} F{retract_spd * 60}
        G4 P{ooze_wait * 1000}
        G92 E0   ; reset extruder
    {% endif %}
    
    ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
    G1 X{brush_start} F{prep_spd}
    G1 Y{brush_front} F{prep_spd}
    {% for wipes in range(1, (wipe_qty + 1)) %}
    	{% for pos_x in range(brush_start, brush_start + brush_width, 5) %}
	    {% set pos_y = brush_back if pos_x%2 else brush_front %}
            G1 X{pos_x} Y{pos_y} Z{brush_top} F{wipe_spd}
        {% endfor %}
    	{% for pos_x in range(brush_start + brush_width, brush_start, -5) %}
	    {% set pos_y = brush_back if pos_x%2 else brush_front %}
            G1 X{pos_x} Y{pos_y} Z{brush_top + 1} F{wipe_spd}
        {% endfor %}
    {% endfor %}
    
    ## Clear from area.
    M117 Cleaned!
    G1 Z{brush_top + clearance_z} F{prep_spd}
    G1 X{bucket_start} F{prep_spd} 
    
    ## Restore the gcode state to how it was before the macro.
    RESTORE_GCODE_STATE NAME=clean_nozzle
    STATUS_READY
    M117


[gcode_macro prime_nozzle]
description: prime nozzle after cleaning
gcode:
    {% set purge_x=printer['gcode_macro clean_nozzle'].purge_x|random() %}
    {% set purge_y=printer['gcode_macro clean_nozzle'].purge_y %}
    {% set purge_z=printer['gcode_macro clean_nozzle'].purge_z %}
    {% set th=printer['toolhead'] %}
    {% set unretract=printer['gcode_macro clean_nozzle'].purge_ret %}

    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    G90
    M83
    {% if th.position.z < 5 %}
        G0 Z5
    {% endif %}
    G0 X{purge_x} Y{purge_y} F30000 
    G0 Z{purge_z} 
    G0 E{unretract+3} F500
    G0 Z2 F3000
    G92 E0 ;reset extruder


[gcode_macro warm_retract]
description: retract filament at warm, not hot temperature to avoid ooze 
variable_min_temp: 200
variable_max_temp: 210
variable_retract_spd: 5    ;mm/s 
gcode:
    {% set retract=printer['gcode_macro clean_nozzle'].purge_ret %}

    M117 Retracting {retract}mm between {min_temp}C and {max_temp}C
    M118 Retracting {retract}mm between {min_temp}C and {max_temp}C
    M83
    G92 E0 ;reset extruder
    M104 S{ (min_temp + max_temp) /2 } 
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}

    G0 E-{retract} F{retract_spd * 60}
    M83
    G92 E0 ;reset extruder
    M104 S0